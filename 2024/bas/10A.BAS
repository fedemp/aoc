10 OPEN "I", #1, "INPUT10.TXT"
20 LIMIT=56: DIM MAP%(LIMIT+1, LIMIT+1): X=-1
30 IF EOF(1) GOTO 100
40 LINE INPUT #1, L$
50 X = X + 1
60 FOR I=0 TO LIMIT
70 MAP%(X, I) = VAL(MID$(L$, I+1, 1))
80 NEXT I
90 GOTO 30
100 CLOSE #1: DIM PATHS(4,2)
110 PATHS(0,0) = 0: PATHS(0,1) = -1: PATHS(1,0) = 0: PATHS(1,1) = 1
120 PATHS(2,0) = -1: PATHS(2,1) = 0: PATHS(3,0) = 1: PATHS(3,1) = 0
130 OPEN "R", #2, "PATH10.TXT", 16: FIELD #2, 16 AS V$
140 OPEN "R", #3, "NINE10.TXT", 16: FIELD #3, 16 AS N$
150 TOTAL# = 0 
160 RECA = -1: RECB = 0 'ALTERNATE BETWEEN EACH RECORD
170 FOR X=0 TO LIMIT 'FOR EACH LINE
180 FOR Y=0 TO LIMIT 'FOR EACH CHARACTER
190 IF MAP%(X,Y) <> 0 GOTO 520
200 RECNINE = 1
210 FOR P=0 TO 3
220 PX = X + PATHS(P, 0): PY = Y + PATHS(P, 1)
230 IF PX < 0 OR PY < 0 OR PX > LIMIT OR PY > LIMIT GOTO 270
240 IF MAP%(PX,PY) <> 1 GOTO 270
250 RECA = RECA + 2
260 LSET V$=RIGHT$(STR$(PX),2)+RIGHT$(STR$(PY),2): PUT #2, RECA
270 NEXT P
280 CURR = 1
290 WHILE RECA > 0
300 GET #2, RECA
310 VX = VAL(LEFT$(V$, 2)): VY = VAL(MID$(V$, 3, 2))
320 FOR P=0 TO 3
330 PX = VX + PATHS(P, 0): PY = VY + PATHS(P, 1)
340 IF PX < 0 OR PY < 0 OR PX > LIMIT OR PY > LIMIT GOTO 460
350 IF MAP%(PX,PY) <> CURR+1 GOTO 460
360 REM NEXT IS VALID, BUT IS IT THE SUMMIT?
370 IF CURR=8 AND MAP%(PX,PY)=9 GOTO 380 ELSE GOTO 430
380 TOTAL#=TOTAL#+1: MAP%(PX,PY) = -1 'MARK THE POSITION AS REACHED
390 REM SAVE POSTION TO RESTORE IT LATER
400 LSET N$=RIGHT$(STR$(PX),2)+RIGHT$(STR$(PY),2): PUT #3, RECNINE
410 RECNINE = RECNINE + 1
420 GOTO 460
430 REM ELSE SAVE NEXT STEP
440 RECB = RECB + 2
450 LSET V$=RIGHT$(STR$(PX),2)+RIGHT$(STR$(PY),2): PUT #2, RECB
460 NEXT P
470 RECA = RECA - 2
480 WEND
490 SWAP RECA, RECB: CURR = CURR + 1
500 IF CURR < 9 AND RECA > 0 GOTO 290
510 GOSUB 540
515 print x y total#
520 NEXT Y: NEXT X
530 PRINT "TOTAL:" TOTAL#: END
540 REM SUB: RESTORE THE "9" POINTS
550 GET #3, 1: WHILE ASC(N$) > 0
560 NX = VAL(LEFT$(N$, 2)): NY = VAL(MID$(N$, 3, 2)) 
570 MAP%(NX,NY) = 9: GET #3
580 WEND: RETURN
