10 STIME$=TIME$
20 OPEN "r", #1, "curr11.txt": CLOSE #1: KILL "curr11.txt"
30 OPEN "r", #1, "next11.txt": CLOSE #1: KILL "next11.txt"
40 OPEN "I", #1, "INPUT11.TXT"
50 OPEN "R", #2, "CURR11.TXT", 32: FIELD #2, 16 AS NSTN$, 16 AS NCNT$
60 REC# = 0: LINE INPUT #1, LN$
70 WHILE INSTR(LN$, " ") > 0
80 V# = VAL(MID$(LN$, 1, INSTR(LN$, " ")-1)) 'NUMBER FROM INPUT
90 LSET NCNT$ = MKD$(1): CNT$ = NCNT$: LSET NCNT$ = MKD$(0)
100 GOSUB 540 'FIND STONE COUNT
110 GOSUB 600 'SAVE STONE
120 LN$ = MID$(LN$, INSTR(LN$, " ") + 1): WEND
130 V# = VAL(LN$) 'LAST NUMBER
140 GOSUB 540 'FIND STONE COUNT
150 GOSUB 600 'SAVE STONE
160 REM FINISH PROCESSING INPUT
170 CLOSE #1: CLOSE #2
180 REM START ITERATING
190 FOR I=1 TO 75
200 OPEN "R", #1, "CURR11.TXT", 32: FIELD #1, 16 AS STN$, 16 AS CNT$
210 OPEN "R", #2, "NEXT11.TXT", 32: FIELD #2, 16 AS NSTN$, 16 AS NCNT$
220 FOR R=1 TO LOF(1)/32
230 GET #1, R: V# = CVD(STN$)
240 IF V# <> 0 GOTO 270
250 V# = 1: GOSUB 540: GOSUB 600
260 GOTO 380 'SKIP ALL NEXT RULES
270 REM START SECOND RULE
280 DGTS = INT(LOG(V#)/LOG(10)) + 1
290 IF DGTS MOD 2 = 1 GOTO 360 'GOTO FALLBACK RULE
300 VF# = V#
310 V# = INT(VF#/10^(DGTS/2)): 'FIRST HALF
320 GOSUB 540: GOSUB 600
330 V# = VF# - INT(VF#/10^(DGTS/2)) * 10^(DGTS/2): 'SECOND HALF
340 GOSUB 540: GOSUB 600
350 GOTO 380 'SKIP ALL NEXT RULES
360 V# = V# * 2024
370 GOSUB 540: GOSUB 600
380 NEXT R 'FINISHED CURRENT NUMBER
390 REM CLEAN UP ITERATION
400 PRINT "ITER" I "STONES" LOF(2)/32
410 CLOSE #1: CLOSE #2
420 KILL "CURR11.TXT": NAME "NEXT11.TXT" AS "CURR11.TXT"
430 NEXT I
440 REM COUNT INSTANCES
450 TOTAL#=0
460 OPEN "R", #1, "CURR11.TXT", 32: FIELD #1, 16 AS STN$, 16 AS CNT$
470 FOR R=1 TO LOF(1)/32
480 GET #1, R
490 TOTAL# = TOTAL# + CVD(CNT$)
500 NEXT R
510 PRINT "TOTAL:" TOTAL#
520 PRINT "START:" STIME$ "END:" TIME$
530 END
540 REM SUB FIND STONE COUNT
550 FOR RECCNT=1 TO LOF(2)/32
560 GET #2, RECCNT
570 IF CVD(NSTN$) = V# THEN RETURN
580 NEXT RECCNT
590 LSET NCNT$ = MKD$(0): RETURN
600 REM SUB SAVE STONE TO PROCESS
610 NEXTC$ = NCNT$
620 LSET NCNT$ = MKD$(CVD(NCNT$) + CVD(CNT$))
630 LSET NSTN$ = MKD$(V#)
640 IF CVD(NEXTC$) > 0 GOTO 650 ELSE GOTO 660
650 PUT #2, RECCNT: GOTO 670
660 PUT #2, LOF(2)/32 + 1
670 RETURN
