10 OPEN "i", #1, "input.txt"
20 OPEN "o", #2, "output.txt"
30 ME$ = "^" : DOT$ = "." : HASH$ = "#" : SIDE = 129
40 DIM DS(4,2) : D = 0 ' How it will move in [x,y] axis. D is index for UP
50 DS(0,0) = 0: DS(0,1) = -1 ' UP
60 DS(1,0) = 1: DS(1,1) = 0 ' RIGHT
70 DS(2,0) = 0: DS(2,1) = 1 ' DOWN
80 DS(3,0) = -1: DS(3,1) = 0 ' RIGHT
90 DIM ME(2) : DIM OGME(2) : DIM MAZE%(SIDE + 1,SIDE + 1)
100 DIM ML(4) : ML(0) = 10 : ML(1) = 100 : ML(2) = 1000 : ML(3) = 10000
110 FOR Y = 0 TO SIDE
120 LINE INPUT #1, LN$ : PRINT LN$
130 FOR X = 0 TO SIDE
140 C$ = MID$(LN$, X+1, 1)
150 IF C$ <> HASH$ THEN MAZE%(X,Y) = -1 ELSE MAZE%(X,Y) = 0
160 IF C$ = ME$ THEN ME(0) = X : ME(1) = Y : OGME(0) = X : OGME(1) = Y
170 NEXT X: NEXT Y
180 REM SAVE INITIAL WALKED PATH
190 SAV = 1 : GOSUB 270 : CLOSE #1 : CLOSE #2 : SAV = 0
200 LOOPS = 0 : LNS = 0
210 OPEN "i", #1, "output.txt"
220 IF EOF(1) THEN PRINT "LOOPS"; LOOPS : END ELSE LNS = LNS + 1
240 INPUT #1, OBX, OBY
245 FOR X=0 TO SIDE : FOR Y=0 TO SIDE
246 IF MAZE%(X,Y) >-1 THEN MAZE%(X,Y) = 0
247 NEXT Y : NEXT X
250 MAZE%(OBX, OBY) = 0 : ME(0)=OGME(0) : ME(1)=OGME(1) : D=0
260 PRINT LNS : GOSUB 270 : MAZE%(OBX, OBY) = -1 : GOTO 220
270 REM SUB: START MOVING
280 NEXTX = ME(0) + DS(D,0) : NEXTY = ME(1) + DS(D,1)
290 NPOS = MAZE%( NEXTX , NEXTY ) ' Next position
300 IF NPOS = -1 OR NPOS = -2 GOTO 310 ELSE GOTO 370
310 ME(0) = NEXTX : ME(1) = NEXTY : MAZE%(NEXTX,NEXTY) = -2
320 IF SAV GOTO 330 ELSE GOTO 350
330 IF (NEXTX<>OGME(0) OR NEXTY<>OGME(1)) GOTO 340 ELSE GOTO 350
340 IF NPOS = -1 THEN PRINT #2, NEXTX;",";NEXTY
350 IF ME(0)=0 OR ME(0)=SIDE OR ME(1)=0 OR ME(1)=SIDE THEN GOTO 360 ELSE GOTO 270
360 PRINT "ESCAPED",TIME$: RETURN
370 REM HANDLE OBSTACLE
380 IF NPOS = 0 THEN MAZE%(NEXTX,NEXTY) = ML(D) : GOTO 410 ELSE GOTO 390
390 IF (NPOS / ML(D)) MOD 2 = 1 THEN LOOPS = LOOPS + 1: RETURN ELSE GOTO 400
400 MAZE%(NEXTX,NEXTY) = NPOS + ML(D) : GOTO 410
410 D = (D+1) MOD 4 : GOTO 270
